name: Infra Validation

on:
  pull_request:
    paths:
      - 'docker-compose.yml'
      - 'backend/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  infra-validate:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: banknifty
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 5s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 5s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Validate defaults
        working-directory: backend
        run: npm run validate:defaults

      - name: Run DB Migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/banknifty
        working-directory: backend
        run: |
          npm run db:migrate

      - name: Run Seeders
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/banknifty
        working-directory: backend
        run: |
          node ./scripts/run_seeders.js

      - name: Build backend
        working-directory: backend
        run: |
          npm run build

      - name: Start backend (background)
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/banknifty
          ENABLE_RULES_ENGINE: 'true'
        working-directory: backend
        run: |
          echo "Starting backend in background and waiting for tcp:8080 (increased timeout)"
          nohup npm start &> /tmp/backend.log &
          echo $! > /tmp/backend.pid || true
          # Wait up to 2 minutes for the backend to start; if it times out, dump logs for debugging
          if ! npx wait-on --timeout 120000 tcp:8080; then
            echo "Wait-for backend timed out; dumping /tmp/backend.log for debugging"
            echo "---- /tmp/backend.log START ----"
            tail -n +1 /tmp/backend.log || true
            echo "---- /tmp/backend.log END ----"
            # Fail the step so CI run shows the diagnosis above
            exit 1
          fi

      - name: Run smoke tests (rules engine + signal persistence)
        working-directory: backend
        run: |
          echo "Running smoke test that validates persisted signals"
          npm run test:smoke

      - name: Stop backend
        working-directory: backend
        run: |
          if [ -f /tmp/backend.pid ]; then
            kill "$(cat /tmp/backend.pid)" || true
          fi

      - name: Run full test suite
        working-directory: backend
        run: npm test
